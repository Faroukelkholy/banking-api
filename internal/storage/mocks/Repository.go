// Code generated by mockery 2.9.0. DO NOT EDIT.

package mocks

import (
	storage "github.com/faroukelkholy/bank/internal/storage"
	mock "github.com/stretchr/testify/mock"
)

// Repository is an autogenerated mock type for the Repository type
type Repository struct {
	mock.Mock
}

// CreateCustomerAccount provides a mock function with given fields: id, account
func (_m *Repository) CreateCustomerAccount(id string, account *storage.Account) error {
	ret := _m.Called(id, account)

	var r0 error
	if rf, ok := ret.Get(0).(func(string, *storage.Account) error); ok {
		r0 = rf(id, account)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// CreateTransaction provides a mock function with given fields: t
func (_m *Repository) CreateTransaction(t *storage.Transaction) error {
	ret := _m.Called(t)

	var r0 error
	if rf, ok := ret.Get(0).(func(*storage.Transaction) error); ok {
		r0 = rf(t)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// GetAccount provides a mock function with given fields: id
func (_m *Repository) GetAccount(id string) (*storage.Account, error) {
	ret := _m.Called(id)

	var r0 *storage.Account
	if rf, ok := ret.Get(0).(func(string) *storage.Account); ok {
		r0 = rf(id)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*storage.Account)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(id)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetAccountTransactions provides a mock function with given fields: accountID
func (_m *Repository) GetAccountTransactions(accountID string) ([]*storage.Transaction, error) {
	ret := _m.Called(accountID)

	var r0 []*storage.Transaction
	if rf, ok := ret.Get(0).(func(string) []*storage.Transaction); ok {
		r0 = rf(accountID)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]*storage.Transaction)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(accountID)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
